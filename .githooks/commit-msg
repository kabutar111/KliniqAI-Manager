#!/usr/bin/env bash
set -euo pipefail

# Allow bypass with env var
if [[ "${COMMIT_MSG_SKIP_LINT:-}" == "1" ]]; then
  exit 0
fi

FILE="$1"
first_line="$(sed -n '1p' "$FILE" | tr -d '\r')"

# Conventional summary: type(scope): subject
# Allowed types
types='feat|fix|docs|chore|refactor|test|perf|ci|build|revert|infra'
pattern="^(${types})(\\([a-z0-9\-\/]+\\))?: [^ ].*$"

errors=()

if ! echo "$first_line" | grep -E -q "$pattern"; then
  errors+=("First line must match: type(scope): subject. Allowed types: feat, fix, docs, chore, refactor, test, perf, ci, build, revert, infra")
fi

# Max 72 chars for subject line
if [[ ${#first_line} -gt 72 ]]; then
  errors+=("Subject too long (${#first_line}). Keep first line <= 72 chars")
fi

# No trailing period
if [[ "$first_line" == *.* ]]; then
  last_char=${first_line: -1}
  if [[ "$last_char" == "." ]]; then
    errors+=("Do not end the subject with a period")
  fi
fi

if (( ${#errors[@]} > 0 )); then
  echo "\nâœ– Commit message does not meet style rules:" >&2
  for e in "${errors[@]}"; do echo "  - $e" >&2; done
  cat >&2 <<'EOT'

Examples:
  feat(kpfg): add question editor toolbar
  fix(kpcg): handle /health 500 when db down
  docs(planning): add July sprint plan
  infra: add PocketBase startup script

Bypass (not recommended): COMMIT_MSG_SKIP_LINT=1 git commit -m "..."
Install hooks once:
  git config core.hooksPath .githooks
EOT
  exit 1
fi

exit 0

